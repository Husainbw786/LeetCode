

class Solution {
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
     
        vector<int> ret;
        int i;
        int size = numbers.size();
         int right = size-1;
            int left = 0;
        while(left<right)
        {
            int sum = numbers[left] + numbers[right];
            if(sum == target)
            {
                 ret.push_back(left+1);
                ret.push_back(right+1);
                return ret;  
            }   
            else if(sum < target)
                {
                 left++;
                }
            else 
            {
                right--;
            }
                
        }
        return ret;
    }
};



********************************************************************************************************************************************************************************

o(n)*2

class Solution {
public:
    
public:
    vector<int> twoSum(vector<int>& numbers, int target) {
     
        vector<int> ret;
        int i,j;
        int size = numbers.size();
        for(i=0;i<size-1;i++)
        {
            for(j=i+1;j<size;j++)
            {
                if(numbers[i] + numbers[j] == target)
                {
                   ret.push_back(i+1);
                   ret.push_back(j+1);
                    return ret;
                }
            }
        }
        return ret;
    }
};
    

























